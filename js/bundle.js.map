{"version":3,"file":"bundle.js","mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACzIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B,4DAA4D;AAC5D,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,mBAAmB,UAAU,MAAM,UAAU;AAC7C,0CAA0C,WAAW;AACrD;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,gDAAgD,WAAW;AAC3D;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,IAAI,YAAY,WAAW;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,kCAAkC;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;;;;;;;;;;ACnFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA,2DAA2D;AAC3D,2CAA2C;AAC3C;AACA;AACA;AACA,WAAW;AACX,6DAA6D;AAC7D;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,QAAQ;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;;;;;;;;;ACpGA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACxDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,cAAc;AAC1C,8BAA8B,WAAW;AACzC,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,mBAAmB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,iDAAiD,OAAO;AACxD;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,gCAAgC,WAAW;AAC3C,MAAM;AACN;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,iDAAiD,OAAO;AACxD;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,gCAAgC,WAAW;AAC3C,MAAM;AACN;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,OAAO;AAC1D;AACA;AACA;AACA,kCAAkC,WAAW;AAC7C,QAAQ;AACR;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,cAAc;AAC7C,OAAO;AACP;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC,mCAAmC,WAAW;AAC9C,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,MAAM;AACN;AACA;AACA;;;;;;;;;;;ACpOA;AACA;AACA;AACA;AACA;AACA,8DAA8D;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA;AACA;;;;;;;;;;;AC/CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,IAAI;AACrB,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;UCjEA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;;;;;ACtBA;AACA,eAAe,mBAAO,CAAC,4CAAgB;AACvC,YAAY,mBAAO,CAAC,8CAAiB;AACrC,YAAY,mBAAO,CAAC,8CAAiB;AACrC,iBAAiB,mBAAO,CAAC,wDAAsB;AAC/C,YAAY,mBAAO,CAAC,8CAAiB;AACrC,YAAY,mBAAO,CAAC,8CAAiB;AACrC,aAAa,mBAAO,CAAC,gDAAkB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC","sources":["webpack://udemyjsfood/./js/modules/calculator.js","webpack://udemyjsfood/./js/modules/cards.js","webpack://udemyjsfood/./js/modules/forms.js","webpack://udemyjsfood/./js/modules/modal.js","webpack://udemyjsfood/./js/modules/slider.js","webpack://udemyjsfood/./js/modules/tabs.js","webpack://udemyjsfood/./js/modules/timer.js","webpack://udemyjsfood/webpack/bootstrap","webpack://udemyjsfood/./js/script.js"],"sourcesContent":["function calculator() {\r\n  // Calculator\r\n\r\n  const result = document.querySelector('.calculating__result span');\r\n\r\n  let sex, height, weight, age, ratio;\r\n\r\n  // устанавливаем значение по умолчанию в пол\r\n  if (localStorage.getItem('sex')) {\r\n    sex = localStorage.getItem('sex');\r\n  } else {\r\n    sex = 'female';\r\n    localStorage.setItem('sex', 'female');\r\n  }\r\n\r\n  // устанавливаем значение по умолчанию в активность\r\n  if (localStorage.getItem('ratio')) {\r\n    ratio = localStorage.getItem('ratio');\r\n  } else {\r\n    ratio = 1.375;\r\n    localStorage.setItem('ratio', 1.375);\r\n  }\r\n\r\n  function calcTotal() {\r\n    // если какое либо из данных не введено то  предупреждаем пользователя\r\n    if (!sex || !height || !weight || !age || !ratio) {\r\n      result.textContent = 'Введите все данные';\r\n      return;\r\n    }\r\n\r\n    if (sex === 'female') {\r\n      result.textContent = Math.round(\r\n        (447.6 + 9.2 * weight + 3.1 * height - 4.3 * age) * ratio\r\n      );\r\n    } else {\r\n      result.textContent = Math.round(\r\n        (88.36 + 13.4 * weight + 4.8 * height - 5.7 * age) * ratio\r\n      );\r\n    }\r\n  }\r\n\r\n  calcTotal();\r\n\r\n  function initLocalsettings(selector, activeClass) {\r\n    const elements = document.querySelectorAll(selector);\r\n\r\n    // сначала удаляем всем эл-там класс активности, а потом\r\n    // добавляем при условии что этот атрибут есть в\r\n    // localStorage\r\n    elements.forEach((elem) => {\r\n      elem.classList.remove(activeClass);\r\n      if (elem.getAttribute('id') === localStorage.getItem('sex')) {\r\n        elem.classList.add(activeClass);\r\n      }\r\n      if (elem.getAttribute('data-ratio') === localStorage.getItem('ratio')) {\r\n        elem.classList.add(activeClass);\r\n      }\r\n    });\r\n  }\r\n\r\n  initLocalsettings('#gender div', 'calculating__choose-item_active');\r\n  initLocalsettings(\r\n    '.calculating__choose_big div',\r\n    'calculating__choose-item_active'\r\n  );\r\n\r\n  function getStaticInformation(selector, activeClass) {\r\n    // получаем эл-ты внтури блока selector\r\n    const elements = document.querySelectorAll(selector);\r\n\r\n    elements.forEach((elem) => {\r\n      elem.addEventListener('click', (e) => {\r\n        // если пользователь кликнул на какую то из активностей,\r\n        // то мы вытаскиваем эту активность\r\n        if (e.target.getAttribute('data-ratio')) {\r\n          ratio = +e.target.getAttribute('data-ratio');\r\n          // поместить выбранную активность в localStorage\r\n          localStorage.setItem('ratio', +e.target.getAttribute('data-ratio'));\r\n        } else {\r\n          sex = e.target.getAttribute('id');\r\n          // поместить выбранную активность в localStorage\r\n          localStorage.setItem('sex', e.target.getAttribute('id'));\r\n        }\r\n\r\n        // со всех эл-тов убираем класс активности и\r\n        // только на кликнутый - возвращаем\r\n        elements.forEach((elem) => {\r\n          elem.classList.remove(activeClass);\r\n        });\r\n\r\n        e.target.classList.add(activeClass);\r\n\r\n        calcTotal();\r\n      });\r\n    });\r\n  }\r\n\r\n  // 2 раза вызываем фунцию сначала для выбора пола а потом для выбора активности\r\n  getStaticInformation('#gender div', 'calculating__choose-item_active');\r\n  getStaticInformation(\r\n    '.calculating__choose_big div',\r\n    'calculating__choose-item_active'\r\n  );\r\n\r\n  // каждый раз когда мы что то вводим в Input, мы отслеживаем это событие\r\n  // с помощью уникального id и записываем в соответствующую переменную\r\n  function getDynamicInformation(selector) {\r\n    const input = document.querySelector(selector);\r\n\r\n    input.addEventListener('input', () => {\r\n      if (input.value.match(/\\D/g)) {\r\n        input.style.border = '1px solid red';\r\n      } else {\r\n        input.style.border = 'none';\r\n      }\r\n\r\n      switch (input.getAttribute('id')) {\r\n        case 'height':\r\n          height = +input.value;\r\n          break;\r\n        case 'weight':\r\n          weight = +input.value;\r\n          break;\r\n        case 'age':\r\n          age = +input.value;\r\n          break;\r\n      }\r\n\r\n      calcTotal();\r\n    });\r\n  }\r\n\r\n  getDynamicInformation('#height');\r\n  getDynamicInformation('#weight');\r\n  getDynamicInformation('#age');\r\n}\r\n\r\nmodule.exports = calculator;\r\n","function cards() {\r\n  // Карточки (работа с сервером)\r\n\r\n  class MenuCard {\r\n    constructor(\r\n      src,\r\n      alt,\r\n      title,\r\n      descr,\r\n      price,\r\n      parentSelector,\r\n      ...classes /*rest оператор*/\r\n    ) {\r\n      this.src = src;\r\n      this.alt = alt;\r\n      this.title = title;\r\n      this.descr = descr;\r\n      this.price = price;\r\n      this.classes = classes; // св-во для rest оператора\r\n      this.parent = document.querySelector(parentSelector); // родительский класс, куда будет запихиваться HTML\r\n      this.transfer = 27; // курс\r\n      this.changeToUAH();\r\n    }\r\n\r\n    changeToUAH() {\r\n      this.price = this.price * this.transfer;\r\n    }\r\n\r\n    // ф-ция, где создаем эл-т div, далее внутрь его помещаем html с подставлением вышеобъявленных переменных\r\n    render() {\r\n      const element = document.createElement('div');\r\n      // проверяем, если никакой класс не добавлен, то вписываем дэфолтный класс menu__item,\r\n      // или добавляем тот класс который внесли\r\n      if (this.classes.length === 0) {\r\n        this.element = 'menu__item';\r\n        element.classList.add(this.element);\r\n      } else {\r\n        this.classes.forEach((className) => element.classList.add(className));\r\n      }\r\n      element.innerHTML = `\r\n        <img src=${this.src} alt=${this.alt} />\r\n        <h3 class=\"menu__item-subtitle\">${this.title}</h3>\r\n        <div class=\"menu__item-descr\">\r\n          ${this.descr}\r\n        </div>\r\n        <div class=\"menu__item-divider\"></div>\r\n        <div class=\"menu__item-price\">\r\n          <div class=\"menu__item-cost\">Цена:</div>\r\n          <div class=\"menu__item-total\"><span>${this.price}</span> грн/день</div>\r\n        </div>\r\n      `;\r\n      this.parent.append(element); // добавляем в родительский класс структуру html - element.\r\n    }\r\n  }\r\n\r\n  // ф-ция получения данных с сервера. Делаем запрос на сервер,\r\n  // дожидаемся окончания, обрабатываем ошибку и трансформируем в json\r\n  const getResource = async (url) => {\r\n    const res = await fetch(url);\r\n\r\n    if (!res.ok) {\r\n      throw new Error(`Could not fetch ${url}, status: ${res.status}`);\r\n    }\r\n\r\n    return await res.json();\r\n  };\r\n\r\n  // делаем запрос на сервер, создаем объект с соответствущими каждому блоку параметрами и вызываем\r\n  // на нем метод render()\r\n  getResource('http://localhost:3000/menu').then((data) => {\r\n    data.forEach(({ img, altimg, title, descr, price }) => {\r\n      new MenuCard(\r\n        img,\r\n        altimg,\r\n        title,\r\n        descr,\r\n        price,\r\n        '.menu .container'\r\n      ).render();\r\n    });\r\n  });\r\n}\r\n\r\nmodule.exports = cards;","function forms() {\r\n  // Forms (работа с сервером)\r\n\r\n  const forms = document.querySelectorAll('form');\r\n\r\n  // сообщения завершения операции\r\n  const message = {\r\n    loading: 'img/form/spinner.svg',\r\n    success: 'Всё хорошо, мы скоро с вами свяжемся',\r\n    failure: 'Что-то пошло не так...',\r\n  };\r\n\r\n  // на каждую форму подвязываем ф-цию bindPostData\r\n  forms.forEach((item) => {\r\n    bindPostData(item);\r\n  });\r\n\r\n  // ф-ция отправки запроса на сервер, получение ответа с сервера в виде\r\n  // promise и далее возвращает и конвертирует в json\r\n  const postData = async (url, data) => {\r\n    const res = await fetch(url, {\r\n      method: 'POST', // каким образом\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n      },\r\n      body: data, // что именно\r\n    });\r\n\r\n    return await res.json();\r\n  };\r\n\r\n  // отправка данных пол-ля на сервер и ответ с сервера в виде\r\n  // вспылвающего окна\r\n  function bindPostData(form) {\r\n    form.addEventListener('submit', (e) => {\r\n      e.preventDefault(); // откл дэфолтное поведение браузера\r\n\r\n      const statusMessage = document.createElement('img'); // создаем спинер\r\n      statusMessage.src = message.loading; // подставляем путь для спинера\r\n      statusMessage.style.cssText = `\r\n          display : block;\r\n          margin: 0 auto;\r\n        `; // устанавливаем img по центру\r\n      form.insertAdjacentElement('afterend', statusMessage); // добавляем спиннер снизу от формы\r\n\r\n      const formData = new FormData(form); // формируем данные которые задал пол-тель\r\n\r\n      // 1. в массив массивов, 2. в объект, 3. в JSON\r\n      const json = JSON.stringify(Object.fromEntries(formData.entries()));\r\n\r\n      // отправляем запрос с данными json на сервер, с помощью промисов\r\n      // обрабатываем данные от пол-ля (выводим данные в консоль, отобращаем\r\n      // showThanksModal, удаляем спиннер), обрабатываем неудачный рез-т,\r\n      // очищаем форму\r\n      postData('http://localhost:3000/requests', json)\r\n        .then((data) => {\r\n          console.log(data);\r\n          showThanksModal(message.success);\r\n          statusMessage.remove();\r\n        })\r\n        .catch(() => {\r\n          showThanksModal(message.failure);\r\n        })\r\n        .finally(() => {\r\n          form.reset();\r\n        });\r\n    });\r\n  }\r\n\r\n  function showThanksModal(message) {\r\n    // находим класс modal__dialog\r\n    const prevModalDialog = document.querySelector('.modal__dialog');\r\n\r\n    // скрываем prevModalDialog\r\n    prevModalDialog.classList.add('hide');\r\n    openModal();\r\n\r\n    // создаем модальное окно на основе существующего modal__dialog\r\n    // вносим HTML и выводимое сообщение\r\n    const thanksModal = document.createElement('div');\r\n    thanksModal.classList.add('modal__dialog');\r\n    thanksModal.innerHTML = `\r\n          <div class = \"modal__content\">\r\n            <div class = \"modal__close\" data-close>×</div>\r\n            <div class = \"modal__title\">${message}</div>\r\n          </div>\r\n      `;\r\n\r\n    // помещаем создаенное окно после основного класса modal\r\n    // устанавливаем таймаут\r\n    document.querySelector('.modal').append(thanksModal);\r\n    setTimeout(() => {\r\n      thanksModal.remove();\r\n      prevModalDialog.classList.add('show');\r\n      prevModalDialog.classList.remove('hide');\r\n      closeModal();\r\n    }, 4000);\r\n  }\r\n}\r\n\r\nmodule.exports = forms;","function modal() {\r\n  // Modal\r\n\r\n  const modalBtn = document.querySelectorAll('[data-modal]'), // кнопка открытия модал. окна\r\n    modal = document.querySelector('.modal'); // родитель модального окна\r\n\r\n  // ф-ция открытия модального окна\r\n  function openModal() {\r\n    modal.classList.add('show');\r\n    modal.classList.remove('hide');\r\n    document.body.style.overflow = 'hidden';\r\n    clearInterval(modalTimerId);\r\n  }\r\n\r\n  // Вешаем обработчик событий на все кнопки modalBtn\r\n  modalBtn.forEach((btn) => {\r\n    btn.addEventListener('click', openModal);\r\n  });\r\n\r\n  // ф-ция для закрытия модального окна\r\n  function closeModal() {\r\n    modal.classList.add('hide');\r\n    modal.classList.remove('show');\r\n    document.body.style.overflow = '';\r\n  }\r\n\r\n  // обработчик события для закрытия окна при нажатии на пустую область экрана\r\n  // или на крестик\r\n  modal.addEventListener('click', (e) => {\r\n    if (e.target === modal || e.target.getAttribute('data-close') == '') {\r\n      closeModal();\r\n    }\r\n  });\r\n\r\n  // вешаем обработчик событий на закрытие при помощи кнопки Esc\r\n  document.addEventListener('keydown', (e) => {\r\n    if (e.code === 'Escape' && modal.classList.contains('show')) {\r\n      closeModal();\r\n    }\r\n  });\r\n\r\n  const modalTimerId = setTimeout(openModal, 50000);\r\n\r\n  function showModalByScroll() {\r\n    if (\r\n      window.pageYOffset + document.documentElement.clientHeight >=\r\n      document.documentElement.scrollHeight\r\n    ) {\r\n      openModal();\r\n      window.removeEventListener('scroll', showModalByScroll);\r\n    }\r\n  }\r\n\r\n  window.addEventListener('scroll', showModalByScroll);\r\n}\r\n\r\nmodule.exports = modal;","function slider() {\r\n  // Slider\r\n\r\n  const slides = document.querySelectorAll('.offer__slide'), // картинки слайдов\r\n    slider = document.querySelector('.offer__slider'), // осн. род. класс\r\n    next = document.querySelector('.offer__slider-next'), // стрелка вперед\r\n    prev = document.querySelector('.offer__slider-prev'), // стрелка назад\r\n    total = document.querySelector('#total'), // номер общий/всего\r\n    current = document.querySelector('#current'), // номер текущий\r\n    slidesWrapper = document.querySelector('.offer__slider-wrapper'), // общая обертка\r\n    slidesField = document.querySelector('.offer__slider-inner'), // обертка слайдов\r\n    width = window.getComputedStyle(slidesWrapper).width; // ширина окошка  со слайдами (ширина 1 слайда)\r\n\r\n  let slideIndex = 1;\r\n  let offset = 0;\r\n\r\n  // инициализция начальных цифр в слайдера\r\n  // подставление 0 в total если цирфа <10\r\n  if (slides.length < 10) {\r\n    total.textContent = `0${slides.length}`;\r\n    current.textContent = `0${slideIndex}`;\r\n  } else {\r\n    total.textContent = slides.length;\r\n    current.textContent = slideIndex;\r\n  }\r\n\r\n  // задаем длину всех слайдов и другие инлайн стили\r\n  slidesField.style.width = 100 * slides.length + '%';\r\n  slidesField.style.display = 'flex';\r\n  slidesField.style.transition = '0.5s all';\r\n  slidesWrapper.style.overflow = 'hidden';\r\n\r\n  slides.forEach((slide) => {\r\n    slide.style.width = width;\r\n  });\r\n\r\n  // возиционируем основной род. эл-т, чтобы точки были всегда поверх\r\n  slider.style.position = 'relative';\r\n\r\n  // создаем эл-т разметки ol, пустой массив для точек\r\n  // и создаем класс для indicators\r\n  const indicators = document.createElement('ol'),\r\n    dots = [];\r\n  indicators.classList.add('carousel-indicators');\r\n\r\n  // прописываем стили для indicators и добавляем их\r\n  // в конец эл-ьа slider\r\n  indicators.style.cssText = `\r\n    position: absolute;\r\n    right: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    z-index: 15;\r\n    display: flex;\r\n    justify-content: center;\r\n    margin-right: 15%;\r\n    margin-left: 15%;\r\n    list-style: none;\r\n  `;\r\n  slider.append(indicators);\r\n\r\n  // с помощью цикла пробегаемся по слайдам, создаем и устанавливаем\r\n  // точки в соответствии с каждым слайдом а также соответствующие атрибуты\r\n  // прописываем data-slide-to атрибут с соответствеующим\r\n  // значением, а также инлайн стили\r\n  for (let i = 0; i < slides.length; i++) {\r\n    const dot = document.createElement('li');\r\n    dot.setAttribute('data-slide-to', i + 1);\r\n    dot.style.cssText = `\r\n      box-sizing: content-box;\r\n      flex: 0 1 auto;\r\n      width: 30px;\r\n      height: 6px;\r\n      margin-right: 3px;\r\n      margin-left: 3px;\r\n      cursor: pointer;\r\n      background-color: #fff;\r\n      background-clip: padding-box;\r\n      border-top: 10px solid transparent;\r\n      border-bottom: 10px solid transparent;\r\n      opacity: .5;\r\n      transition: opacity .6s ease;\r\n    `;\r\n    // если мы на 1й итерации, то\r\n    // прозрачность ставим на 1 (по умолчанию 0.5)\r\n    if (i == 0) {\r\n      dot.style.opacity = 1;\r\n    }\r\n    // вставляем точки в конец indicators(ol)\r\n    // вставляем точки в массив dots\r\n    indicators.append(dot);\r\n    dots.push(dot);\r\n  }\r\n\r\n  function onlyDigits(str) {\r\n    return +str.replace(/\\D/g, '');\r\n  }\r\n\r\n  // сначала всему массиву устанавливаем прозрачность 0.5\r\n  // потом по очереди каждому dot уст. прозрачность 1\r\n  function dotsOpacity() {\r\n    dots.forEach((dots) => (dots.style.opacity = '0.5'));\r\n    dots[slideIndex - 1].style.opacity = 1;\r\n  }\r\n\r\n  next.addEventListener('click', () => {\r\n    // если слайд сдвинулся в конец то перемещаем в начало\r\n    if (offset == onlyDigits(width) * (slides.length - 1)) {\r\n      offset = 0;\r\n    } else {\r\n      // в противном случае просто двигаем слайд вперед\r\n      offset += onlyDigits(width);\r\n    }\r\n    // сдвигаем слайды\r\n    slidesField.style.transform = `translateX(-${offset}px)`;\r\n\r\n    // если мы долистали слайды до конца, то переключаемся на 1й\r\n    // в противном случае листаем вперед\r\n    if (slideIndex == slides.length) {\r\n      slideIndex = 1;\r\n    } else {\r\n      slideIndex++;\r\n    }\r\n\r\n    // подставляем ноль если кол-во слайдов <10\r\n    if (slides.length < 10) {\r\n      current.textContent = `0${slideIndex}`;\r\n    } else {\r\n      current.textContent = slideIndex;\r\n    }\r\n\r\n    dotsOpacity();\r\n  });\r\n\r\n  prev.addEventListener('click', () => {\r\n    // если слайд на первой позиции и двигаем назад, то нас перекидывает на посл слайд\r\n    if (offset == 0) {\r\n      offset = onlyDigits(width) * (slides.length - 1);\r\n    } else {\r\n      // в противном случае просто двигаем слайд назад\r\n      offset -= onlyDigits(width);\r\n    }\r\n    // сдвигаем слайды\r\n    slidesField.style.transform = `translateX(-${offset}px)`;\r\n\r\n    // из 1й позиции переход на 4й слайд при обратном движении слайдов\r\n    if (slideIndex == 1) {\r\n      slideIndex = slides.length;\r\n    } else {\r\n      slideIndex--;\r\n    }\r\n\r\n    // подставляем ноль если кол-во слайдов <10\r\n    if (slides.length < 10) {\r\n      current.textContent = `0${slideIndex}`;\r\n    } else {\r\n      current.textContent = slideIndex;\r\n    }\r\n\r\n    dotsOpacity();\r\n  });\r\n\r\n  dots.forEach((dot) => {\r\n    dot.addEventListener('click', (e) => {\r\n      // находим элемент по которому был клик\r\n      const slideTo = e.target.getAttribute('data-slide-to');\r\n      // сопоставляем номер слайда и точки\r\n      slideIndex = slideTo;\r\n\r\n      // смещение точек\r\n      offset = onlyDigits(width) * (slideTo - 1);\r\n      // смещение слайдера\r\n      slidesField.style.transform = `translateX(-${offset}px)`;\r\n\r\n      // подставляем ноль если кол-во слайдов <10\r\n      if (slides.length < 10) {\r\n        current.textContent = `0${slideIndex}`;\r\n      } else {\r\n        current.textContent = slideIndex;\r\n      }\r\n\r\n      dotsOpacity();\r\n    });\r\n  });\r\n\r\n  // простой слайдер (без переменных)\r\n  // showSlides(slideIndex);\r\n\r\n  // // подставление 0 в total если цирфа <10\r\n  // if (slides.length < 10) {\r\n  //   total.textContent = `0${slides.length}`;\r\n  // } else {\r\n  //   total.textContent = slides.length;\r\n  // }\r\n\r\n  // function showSlides(n) {\r\n  //   if (n > slides.length) { // переключение с 04 на 01\r\n  //     slideIndex = 1;\r\n  //   }\r\n  //   if (n < 1) {\r\n  //     slideIndex = slides.length;\r\n  //   }\r\n  //   // скрыть все слайды\r\n  //   slides.forEach((item) => (item.style.display = 'none'));\r\n  //   // отобразить 1й слайд\r\n  //   slides[slideIndex - 1].style.display = 'block';\r\n\r\n  //   // подставление 0 в current если цифра <10\r\n  //   if (slides.length < 10) { //\r\n  //     current.textContent = `0${slideIndex}`;\r\n  //   } else {\r\n  //     current.textContent = slideIndex;\r\n  //   }\r\n  // }\r\n  // // изменение индекса\r\n  // function plusSlides(n) {\r\n  //   showSlides(slideIndex += n);\r\n  // }\r\n\r\n  // // обработчик событий на клик\r\n  // prev.addEventListener('click', () => {\r\n  //   plusSlides(-1);\r\n  // });\r\n  // next.addEventListener('click', () => {\r\n  //   plusSlides(1);\r\n  // });\r\n}\r\n\r\nmodule.exports = slider;\r\n","function tabs() {\r\n  // Tabs\r\n\r\n  const tabs = document.querySelectorAll('.tabheader__item'), // табы\r\n    tabsContent = document.querySelectorAll('.tabcontent'), // картинки табов\r\n    tabsParent = document.querySelector('.tabheader__items'); // родитель табов\r\n\r\n  // ф-ция для скрытия табов. Для этого добавляем класс hide(css) и удаляем классы show, fade (css),\r\n  // а также убираем класс активности tabheader__item_active\r\n  function hideTabContent() {\r\n    tabsContent.forEach((item) => {\r\n      item.classList.add('hide');\r\n      item.classList.remove('show', 'fade');\r\n    });\r\n\r\n    tabs.forEach((item) => {\r\n      item.classList.remove('tabheader__item_active');\r\n    });\r\n  }\r\n\r\n  // ф-ция для показа первого эл-та табов. Для этого i-му эл-ту добавляем классы show, fade (css)\r\n  // и удаляем класс hide (css), а также добавляем класс активности tabheader__item_active\r\n  function showTabContent(i = 0) {\r\n    tabsContent[i].classList.add('show', 'fade');\r\n    tabsContent[i].classList.remove('hide');\r\n    tabs[i].classList.add('tabheader__item_active');\r\n  }\r\n\r\n  hideTabContent();\r\n  showTabContent();\r\n\r\n  // создаем обработчик событий и с помощью делегирования вешаем обработчик на родительский\r\n  // класс табов и проверяем, если клик произошел на нужный таб, то вызываем ф-ции hideTabContent и showTabContent.\r\n  tabsParent.addEventListener('click', (event) => {\r\n    const target = event.target;\r\n\r\n    if (target && target.classList.contains('tabheader__item')) {\r\n      tabs.forEach((item, i) => {\r\n        if (target == item) {\r\n          hideTabContent();\r\n          showTabContent(i);\r\n        }\r\n      });\r\n    }\r\n  });\r\n}\r\n\r\nmodule.exports = tabs;\r\n","function timer() {\r\n  // Timer\r\n\r\n  const deadline = '2021-12-31';\r\n\r\n  // Вычисляем оставшееся время с помощью вычитания из конечной даты\r\n  // текущей даты, а также конвертируем миллисекунды в соотв единицы времени.\r\n  // Возвращаем единицы времении в виде объекта\r\n  function getTimeRemaining(endTime) {\r\n    const t = Date.parse(endTime) - Date.parse(new Date()),\r\n      days = Math.floor(t / (1000 * 60 * 60 * 24)),\r\n      hours = Math.floor((t / (1000 * 60 * 60)) % 24),\r\n      minutes = Math.floor((t / 1000 / 60) % 60),\r\n      seconds = Math.floor((t / 1000) % 60);\r\n\r\n    return {\r\n      total: t,\r\n      days: days,\r\n      hours: hours,\r\n      minutes: minutes,\r\n      seconds: seconds,\r\n    };\r\n  }\r\n\r\n  // ф-ция для подставления 0 перед числом, если цифра <10\r\n  function getZero(num) {\r\n    if (num >= 0 && num < 10) {\r\n      return `0${num}`;\r\n    } else {\r\n      return num;\r\n    }\r\n  }\r\n  // Устанавливаем время с помощью соответствующих селекторов\r\n  // А также устанавливаем интервал в 1000 миллисек.\r\n  function setClock(selector, endTime) {\r\n    const timer = document.querySelector(selector),\r\n      days = timer.querySelector('#days'),\r\n      hours = timer.querySelector('#hours'),\r\n      minutes = timer.querySelector('#minutes'),\r\n      seconds = timer.querySelector('#seconds'),\r\n      timeInterval = setInterval(updateClock, 1000);\r\n\r\n    updateClock(); // вызываем ф-цию для того, чтобы после обновления страницы выводилось сразу\r\n    // нужное время, а не то которое прописано в вёрстке\r\n\r\n    // Создаем переменную t в виде объекта оставшегося времени,\r\n    // помещяем соответствующее св-во объекта в HTML,\r\n    // Проверяем не закончилось ли время, если да, то очищаем интервал clearInterval\r\n    function updateClock() {\r\n      const t = getTimeRemaining(endTime);\r\n\r\n      days.innerHTML = getZero(t.days);\r\n      hours.innerHTML = getZero(t.hours);\r\n      minutes.innerHTML = getZero(t.minutes);\r\n      seconds.innerHTML = getZero(t.seconds);\r\n\r\n      if (t.total <= 0) {\r\n        clearInterval(timeInterval);\r\n      }\r\n    }\r\n  }\r\n\r\n  setClock('.timer', deadline);\r\n}\r\n\r\nmodule.exports = timer;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","window.addEventListener('DOMContentLoaded', () => {\r\n  const tabs = require('./modules/tabs'),\r\n    modal = require('./modules/modal'),\r\n    timer = require('./modules/timer'),\r\n    calculator = require('./modules/calculator'),\r\n    cards = require('./modules/cards'),\r\n    forms = require('./modules/forms'),\r\n    slider = require('./modules/slider');\r\n\r\n  tabs();\r\n  modal();\r\n  timer();\r\n  calculator();\r\n  cards();\r\n  forms();\r\n  slider();\r\n});\r\n"],"names":[],"sourceRoot":""}